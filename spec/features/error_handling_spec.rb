require 'spec_helper'

describe RailsDynamicErrors do
  context "when the error is manually generated via the errors path" do
    it "displays the error code" do
      visit '/errors/invalid_ninja'
      page.should have_content("invalid_ninja")
    end
  end

  context "when the error is automatically generated via the middleware" do
    before(:each) do
      Rails.application.config.rails_dynamic_errors.http_error_status_codes_to_handle = []
    end

    it "does not interfere with valid requests" do
      thing = Thing.create!(:name => "Test")
      visit thing_path(thing)
      page.should have_content("Name: Test")
    end

    context "when the application is configured to show exceptions" do
      around(:each) do |example|
        original = set_environment_variable('action_dispatch.show_exceptions', true)
        example.run
        set_environment_variable('action_dispatch.show_exceptions', original)
      end
  
      context "and not configured to show detailed exceptions" do
        around(:each) do |example|
          original = set_environment_variable('action_dispatch.show_detailed_exceptions', false)
          example.run
          set_environment_variable('action_dispatch.show_exceptions', original)
        end

        context "receives a 404 error" do
          context "and is configured to handle it" do
            before(:each) do
              Rails.application.config.rails_dynamic_errors.http_error_status_codes_to_handle = [404]
            end
    
            context "and the error was generated by an invalid route" do
              it "displays a 404 error page" do
                visit '/bogus_route'
                page.should have_content("404 Not Found")
              end
            end
    
            context "and the error was generated by a valid route with a non-existent resource" do
              it "displays a 404 error page" do
                visit '/things/-1'
                page.should have_content("404 Not Found")
              end
            end
          end

          context "and is not configured to handle it" do
            context "and the error was generated by an invalid route" do
              it "displays the standard Rails 404 error page" do
                visit '/bogus_route'
                page.should_not have_content("404 Not Found")
              end
            end

            context "and the error was generated by a valid route with a non-existent resource" do
              it "displays the standard Rails 404 error page" do
                visit '/things/-1'
                page.should_not have_content("404 Not Found")
              end
            end
          end
        end

        context "receives a 500 error" do
          context "and is configured to handle it" do
            before(:each) do
              Rails.application.config.rails_dynamic_errors.http_error_status_codes_to_handle = [500]
            end

            context "when an internal server error is encountered" do
              it "displays a 500 error page" do
                visit '/booms/1'
                page.should have_content("500 Internal Server Error")
              end
            end
          end

          context "and is not configured to handle it" do
            it "displays the standard Rails 500 error page" do
              visit '/booms/1'
              page.should_not have_content("500 Internal Server Error")
            end
          end
        end
      end
  
      context "and configured to show detailed exceptions" do
        around(:each) do |example|
          original = set_environment_variable('action_dispatch.show_detailed_exceptions', true)
          example.run
          set_environment_variable('action_dispatch.show_exceptions', original)
        end

        context "receives a 404 error" do
          context "and the error was generated by an invalid route" do
            it "displays the standard Rails 404 error page" do
              visit '/bogus_route'
              page.should_not have_content("404 Not Found")
            end
          end
    
          context "and the error was generated by a valid route with a non-existent resource" do
            it "displays the standard Rails 404 error page" do
              visit '/things/-1'
              page.should_not have_content("404 Not Found")
            end
          end
        end

        context "receives a 500 error" do
          context "when it is not configured to handle 500 errors" do
            it "displays the standard Rails 500 error page" do
              visit '/booms/1'
              page.should_not have_content("500 Internal Server Error")
            end
          end
        end
      end
    end
  
    context "when the application is not configured to show exceptions" do
      around(:each) do |example|
        original = set_environment_variable('action_dispatch.show_exceptions', false)
        example.run
        set_environment_variable('action_dispatch.show_exceptions', original)
      end

      context "receives a 404 error" do
        context "and the error was generated by an invalid route" do
          it "displays the standard Rails 404 error page" do
            expect { visit '/bogus_route' }.to raise_error
          end
        end

        context "and the error was generated by a valid route with a non-existent resource" do
          it "displays the standard Rails 404 error page" do
            expect { visit '/things/-1' }.to raise_error
          end
        end
      end

      context "receives a 500 error" do
        context "when it is not configured to handle 500 errors" do
          it "displays the standard Rails 500 error page" do
            expect { visit '/booms/1' }.to raise_error
          end
        end
      end
    end
  end

  def set_environment_variable(variable, value)
    original_value = Rails.application.env_config[variable]
    Rails.application.env_config[variable] = value
    original_value
  end
end
